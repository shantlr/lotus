// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String @map("user_id")
  type               String
  provider           String
  providerAccountId  String @map("provider_account_id")
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("provider_account_id")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  expires      DateTime
  userId       String   @map("user_id")
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?

  accounts      Account[]
  sessions      Session[]
  tasks         Task[]
  labels    Label[]
  labelSettings UserLabelSettings[]
  taskLabels UserTaskLabel[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Task {
  id String @id @default(cuid())
  start DateTime
  end DateTime

  title String

  creator_id String
  creator User @relation(fields: [creator_id], references: [id], onDelete: Cascade)

  created_at DateTime @default(now())

  userLabels UserTaskLabel[]
}

model Label {
  id String @id @default(cuid())
  name String

  // If user can assign label manually to event
  assignable Boolean

  creator_id String
  creator User @relation(fields: [creator_id], references: [id], onDelete: Cascade)
  created_at DateTime @default(now())

  userSettings UserLabelSettings[]
  userTaskLabels UserTaskLabel[]
}

model UserLabelSettings {
  // Hex color
  color String
  secondary_color String

  user_id String
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  task_label_id String
  task_label Label @relation(fields: [task_label_id], references: [id], onDelete: Cascade)

  @@unique([user_id, task_label_id])
}

model UserTaskLabel {
  user_id String
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  task_id String
  task Task @relation(fields: [task_id], references: [id], onDelete: Cascade)

  label_id String
  label Label @relation(fields: [label_id], references: [id], onDelete: Cascade)

  @@unique([task_id, label_id, user_id])
}